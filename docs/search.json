{
  "articles": [
    {
      "path": "01-r-caracteristicas_generales.html",
      "title": "R - Conceptos básicos",
      "author": [],
      "contents": "\r\n\r\nContents\r\nCaracterísticas generales de R\r\n\r\nCaracterísticas generales de R\r\nR es un lenguaje de programación enfocado en análisis estadístico. Es ampliamente utilizado en diversas áreas de investigación, entre las que pueden mencionarse aprendizaje automático (machine learning), ciencia de datos (data science) y big data, con aplicaciones en campos como biomedicina, bioinformática y finanzas, entre muchos otros. Fue creado por Ross Ihaka y Robert Gentleman en la Universidad de Auckland, Nueva Zelanda, en 1993.\r\nAlgunas de las principales características de este lenguaje son:\r\nEs interpretado: las instrucciones se traducen una por una a lenguaje máquina, a diferencia de los lenguajes compilados, que traducen de manera conjunta las instrucciones de una unidad completa (ej. un programa o una biblioteca). Los lenguajes interpretados tienden a ser más lentos que los compilados, pero también son más flexibles.\r\nEs multiplataforma: puede ejecutarse en los sistemas operativos más populares (ej. Microsoft Windows, macOS, Linux).\r\nTiene un sistema de tipos de datos dinámico: las variables pueden tomar diferentes tipos de datos (ej. textuales, numéricos) durante la ejecución del programa, a diferencia del caso de un sistema de tipos de datos estático, en el que las variables solo pueden tener un tipo de datos.\r\nSoporta varios paradigmas de programación: los paradigmas son estilos o enfoques teóricos de programación. R soporta los paradigmas de programación funcional, programación orientada a objetos, programación imperativa y programación procedimental.\r\nR es un proyecto de software libre que se comparte mediante una licencia GNU General Public Licence (GNU GPL). Esta característica permite que la funcionalidad original de R pueda ser ampliada mediante bibliotecas o paquetes desarrollados por la comunidad de programadores.\r\nPara programar en R, puede utilizarse una interfaz de línea de comandos y también ambientes de desarrollo integrados (IDE, integrated development environment) como Jupyter o RStudio.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-04-24T23:59:45-06:00"
    },
    {
      "path": "02-rstudio.html",
      "title": "R - Conceptos básicos",
      "author": [],
      "contents": "\r\n\r\nContents\r\nEl ambiente de desarrollo RStudio\r\n\r\nEl ambiente de desarrollo RStudio\r\nRStudio es el IDE más popular para el lenguaje R. Está disponible en una versión de escritorio (RStudio Desktop) y en una versión para servidor (RStudio Server). Esta última permite la conexión de varios usuarios a través de un navegador web. RStudio se ofrece también como un servicio en la nube, a través de RStudio Cloud.\r\n\r\nInterfaz de RStudio.\r\nAdemás de edición de código fuente en R (y otros lenguajes), RStudio contiene capacidades para depurar código y visualizar datos en formatos tabulares, gráficos y de mapas.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-04-25T00:02:31-06:00"
    },
    {
      "path": "03-r-funciones_paquetes.html",
      "title": "R - Conceptos básicos",
      "author": [],
      "contents": "\r\n\r\nContents\r\nFunciones\r\nEjemplos\r\nArgumentos\r\nAyuda\r\nConjuntos de datos para pruebas\r\n\r\nBibliotecas y paquetes\r\n\r\nFunciones\r\nR, al igual que otros lenguajes de programación, estructura su funcionalidad en unidades de código fuente llamadas funciones. Cada función realiza una tarea específica como, por ejemplo, un cálculo matemático y, por lo general, retorna un valor como salida. Todas las funciones tienen un nombre y un conjunto de argumentos que especifican los datos de entrada que procesa la función. Los argumentos se escriben entre paréntesis redondos (()) y estos siempre deben incluirse, aún en el caso de que la función no tenga ningún argumento. Si la función tiene varios argumentos, deben separarse mediante comas (,).\r\nEjemplos\r\nLa función print() recibe como argumento un valor (ej. un texto o un número) para imprimirlo en la pantalla. En el siguiente fragmento de código en R, se utiliza print() para imprimir la hilera “Hola mundo”. Nótese el uso del símbolo # para comentarios (i.e. texto que no es código ejecutable).\r\n\r\n\r\n# Impresión de una hilera de caracteres\r\nprint(\"Hola mundo\")\r\n\r\n\r\n[1] \"Hola mundo\"\r\n\r\nLa función mean() retorna la media aritmética del argumento de entrada. En el siguiente ejemplo, se calcula la media de los números de un vector creado a su vez con la función c().\r\n\r\n\r\n# Media aritmética\r\nmean(c(2, 4, 5, 9))\r\n\r\n\r\n[1] 5\r\n\r\nLa función getwd() (get working directory) retorna la ruta del directorio de trabajo de la sesión actual de R. Este es el directorio en el cual R espera encontrar, por ejemplo, archivos de datos.\r\n\r\n\r\n# Impresión del directorio de trabajo\r\ngetwd()\r\n\r\n\r\n[1] \"C:/Users/mfvargas/gf0604-procesamientodatosgeograficos/2021i/2021i-leccion-06\"\r\n\r\nLa función setwd() (set working directory) establece la ruta del directorio de trabajo de la sesión actual de R. Como argumento, recibe una hilera de texto con la ruta.\r\nNote las barras utilizadas para separar los subdirectorios: / (no \\)\r\n\r\n\r\n# Definición del directorio de trabajo (la ruta debe existir)\r\nsetwd(\"C:/Users/mfvargas\")\r\n\r\n# Directorio con espacios, tildes y eñes\r\nsetwd(\"C:/Users/mfvargas/mi directorio con espacios y tildes áéíóúñ\")\r\n\r\n\r\n\r\n Ejercicio 01:\r\na. Obtenga la ruta de su directorio de trabajo con la función getwd().\r\nb. Si lo desea, cambie la ruta de su directorio de trabajo con la función setwd(). Verifique el cambio con getwd().\r\nArgumentos\r\nLos argumentos de las funciones tienen nombres que pueden especificarse, en caso de ser necesario. En algunos casos, el orden y el tipo de datos de los argumentos permiten que el interpretador de R conozca cuál es cada uno.\r\nEn el siguiente ejemplo, se utilizan los argumentos x, xlab y ylab de la función plot() para especificar la fuente de datos y las etiquetas de los ejes x e y de un gráfico de dispersión.\r\n\r\n\r\n# Gráfico de dispersón del conjunto de datos \"cars\" con etiquetas en los ejes x e y\r\nplot(\r\n  x=cars, \r\n  xlab=\"Velocidad (mph)\", \r\n  ylab=\"Distancia requerida para frenar (pies)\"\r\n)\r\n\r\n\r\n\r\n\r\n Ejercicio 02: estudie la documentación de la función plot() y agregue al gráfico anterior:\r\na. Un título.\r\nb. Un subtítulo.\r\nAyuda\r\nPara obtener ayuda de una función desde la línea de comandos de R, puede utilizarse un signo de pregunta (?) seguido del nombre de la función o bien la función help(). Por ejemplo:\r\n\r\n\r\n# Ayuda de la función setwd()\r\n?setwd\r\nhelp(setwd)\r\n\r\n\r\n\r\nAdicionalmente, puede utilizarse la función apropos() para buscar funciones por palabras clave.\r\n\r\n\r\n# Búsqueda, por palabras clave, de funciones relacionadas con \"mean\" (media aritmética). Note las comillas (\"\").\r\napropos(\"mean\")\r\n\r\n\r\n [1] \".colMeans\"     \".rowMeans\"     \"colMeans\"      \"kmeans\"       \r\n [5] \"mean\"          \"mean.Date\"     \"mean.default\"  \"mean.difftime\"\r\n [9] \"mean.POSIXct\"  \"mean.POSIXlt\"  \"rowMeans\"      \"weighted.mean\"\r\n\r\nLa función example() presenta ejemplos sobre el uso de una función.\r\n\r\n\r\n# Ejemplos de uso de la función mean()\r\nexample(\"mean\")\r\n\r\n\r\n\r\nmean> x <- c(0:10, 50)\r\n\r\nmean> xm <- mean(x)\r\n\r\nmean> c(xm, mean(x, trim = 0.10))\r\n[1] 8.75 5.50\r\n\r\nPor otra parte, el sitio All R Documentation reúne documentación de funciones de una gran cantidad de paquetes de R. También puede obtenerse ayuda sobre una función en los buscadores de Internet (ej. Google), además de ejemplos, tutoriales y otros materiales de apoyo.\r\nConjuntos de datos para pruebas\r\nPara efectos de pruebas y ejemplos, la distribución base de R incorpora varios conjuntos de datos que pueden listarse con la función data(). Para obtener información acerca de un conjunto de datos en particular, puede utilizarse el operador ?.\r\n\r\n\r\n# Información sobre todos los conjuntos de datos incorporados en la distribución base de R\r\ndata()\r\n\r\n# Información sobre el cojunto de datos \"cars\"\r\n?cars\r\n\r\n# Información sobre el cojunto de datos \"Iris\"\r\n?iris\r\n\r\n\r\n\r\nBibliotecas y paquetes\r\nLas funciones de R se distribuyen mediante paquetes. Cada paquete contiene un conjunto de funciones y estructuras de datos relacionadas entre sí. Para utilizar un paquete, primero debe cargarse (en la memoria del computador) con la función library().\r\n\r\n\r\n# Carga del paquete stats\r\nlibrary(stats)\r\n\r\n\r\n\r\nAlgunos paquetes están contenidos en la distribución base de R y otros deben instalarse de manera separada con la función install.packages().\r\nEn el siguiente ejemplo, se instala el paquete PASWR2, el cual contiene el conjunto de datos TITANIC3.\r\n\r\n\r\n# Instalación del paquete PASWR2 (note las comillas)\r\ninstall.packages(\"PASWR2\")\r\n\r\n\r\n\r\nEl paquete PASWR2 se carga con library().\r\n\r\n\r\n# Carga de PASWR2\r\nlibrary(PASWR2)\r\n\r\n\r\n\r\nEl conjunto de datos TITANIC3 puede visualizarse con la función View().\r\n\r\n\r\n# Visualización del conjunto de datos TITANIC3\r\nView(TITANIC3)\r\n\r\n\r\n\r\nPara visualizar gráficamente el conjunto de datos, el siguiente gráfico de barras muestra la distribución de pasajeros por clase.\r\n\r\n\r\n# Cantidades de pasajeros por clase\r\ntable(TITANIC3$pclass)\r\n\r\n\r\n\r\n1st 2nd 3rd \r\n323 277 709 \r\n\r\n\r\n# Gráfico de barras por clase de pasajero\r\nbarplot(\r\n  height=table(TITANIC3$pclass),\r\n  main=\"Distribución de pasajeros del Titanic por clase\",\r\n  xlab = \"Clase\",\r\n  ylab = \"Cantidad de pasajeros\"  \r\n)\r\n\r\n\r\n\r\n\r\nLa distribución por cada clase puede dividirse en fallecidos y sobrevivientes.\r\n\r\n\r\n# Cantidades de pasajeros fallecidos y sobrevivientes por clase\r\n# (0 corresponde a fallecidos y 1 a sobrevivientes)\r\ntable(TITANIC3$survived, TITANIC3$pclass)\r\n\r\n\r\n   \r\n    1st 2nd 3rd\r\n  0 123 158 528\r\n  1 200 119 181\r\n\r\nEl siguiente gráfico muestra en un gráfico de barras apiladas la distribución de pasajeros sobrevivientes y fallecidos en cada clase.\r\n\r\n\r\n# Gráfico de barras apiladas\r\nbarplot(\r\n  height = table(TITANIC3$survived, TITANIC3$pclass),\r\n  main = \"Distribución de pasajeros fallecidos y sobrevivientes por clase\",\r\n  xlab = \"Clase\",\r\n  ylab = \"Cantidad de pasajeros\",\r\n  col = topo.colors(2)\r\n)\r\n\r\n# Leyenda\r\nlegend(\r\n  x = \"topleft\",\r\n  inset = 0.03,\r\n  legend = c(\"Fallecidos\", \"Sobrevivientes\"),\r\n  fill = topo.colors(2),\r\n  horiz = TRUE\r\n)\r\n\r\n\r\n\r\n\r\nLa misma información se muestra seguidamente en un gráfico de barras agrupadas.\r\n\r\n\r\n# Gráfico de barras agrupadas\r\nbarplot(\r\n  height = table(TITANIC3$survived, TITANIC3$pclass),\r\n  main = \"Distribución de pasajeros fallecidos y sobrevivientes por clase\",\r\n  xlab = \"Clase\",\r\n  ylab = \"Cantidad de pasajeros\",  \r\n  col = topo.colors(2),\r\n  beside = TRUE\r\n)\r\n\r\n# Leyenda\r\nlegend(\r\n  x = \"topleft\",\r\n  inset = 0.03,\r\n  legend = c(\"Fallecidos\", \"Sobrevivientes\"),\r\n  fill = topo.colors(2),\r\n  horiz = TRUE\r\n)\r\n\r\n\r\n\r\n\r\n Ejercicio 03:\r\na. Muestre la distribución de pasajeros fallecidos y sobrevivientes por sexo en un gráfico de barras apiladas.\r\nb. Muestre la distribución de pasajeros fallecidos y sobrevivientes por sexo en un gráfico de barras agrupadas.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-04-25T00:08:47-06:00"
    },
    {
      "path": "index.html",
      "title": "GF0604 Procesamiento de datos geográficos 2021-I. Lección 06",
      "description": "Curso GF0604 Procesamiento de datos geográficos. Escuela de Geografía, Universidad de Costa Rica. Primer ciclo lectivo 2021. Lección 06.\n",
      "author": [
        {
          "name": "Manuel Vargas",
          "url": "https://github.com/mfvargas"
        }
      ],
      "contents": "\r\n\r\nContents\r\nResumen\r\nTrabajo previo\r\nContenidos\r\n\r\nResumen\r\nEn esta lección, se estudiarán los conceptos básicos del lenguaje de programación R, incluyendo:\r\nCaracterísticas generales de R.\r\nEl ambiente de desarrollo RStudio.\r\nFunciones y paquetes.\r\nTrabajo previo\r\nLea los capítulos 2 y 3 de Grolemund, G., & Wickham, H. (2014). Hands-On Programming with R.\r\nContenidos\r\n01 R - Características generales02 El ambiente de desarrollo RStudio03 R - Funciones y paquetes\r\n\r\n\r\n\r\n",
      "last_modified": "2021-04-25T00:33:20-06:00"
    }
  ],
  "collections": []
}
